package com.github.iai_swm;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import zmq.*;



/**
 * A simple {@link Subscriber} {@link NodeMain}.
 */
public class SWMConnection{

  SocketBase sc;
  Ctx ctx;
    
    ////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////EVERYTHING/////////////////////////
    //////////////////////////RELATED TO THE AGENT///////////////////////////
    ////////////////////////////////////////////////////////////////////////
    
    /**
     *
     * Query the REF Agent ID
     *
     *
     **/
    public String queryAnimalsREFID()
    {
    	ctx = ZMQ.init(1);                         
  	sc = ZMQ.socket(ctx, ZMQ.ZMQ_REQ);
  	boolean rc = ZMQ.connect(sc, "tcp://127.0.0.1:22422");
	String data ="{"+
	    "\"@worldmodeltype\": \"RSGQuery\"," +"\"query\": \"GET_NODES\","+"\"attributes\":["+
	    "{\"key\": \"name\", \"value\": \"animals\"}," +"]"+ "}";
	int result = ZMQ.send(sc,data.getBytes(ZMQ.CHARSET),data.length(),0);
	Msg msg = ZMQ.recv(sc, 0);
	JSONObject jsonObject = JSONObject.fromObject(new String(msg.data()));
	System.out.println(jsonObject);
	
	JSONArray array =  jsonObject.getJSONArray("ids");
	ZMQ.close(sc);
	ZMQ.term(ctx);
	return array.getString(0);
    }
    

    /**
     *
     * Query the Agent ID
     *
     *
     **/
    public String queryAnimalsID(String name)
    {
	System.out.println("queryTransform function");
    	ctx = ZMQ.init(1);               
	          
  	sc = ZMQ.socket(ctx, ZMQ.ZMQ_REQ);
  	boolean rc = ZMQ.connect(sc, "tcp://127.0.0.1:22422");
  	System.out.println("TEST3");
	String data ="{"+
	    "\"@worldmodeltype\": \"RSGQuery\"," +"\"query\": \"GET_NODES\","+"\"attributes\":["+
	    "{\"key\": \"sherpa:agent_name\", \"value\": \""+name+"\"}," +"]"+ "}";
	int result = ZMQ.send(sc,data.getBytes(ZMQ.CHARSET),data.length(),0);
	Msg msg = ZMQ.recv(sc, 0);
	
	System.out.println("received reply");
	JSONObject jsonObject = JSONObject.fromObject(new String(msg.data()));
	System.out.println(jsonObject);
	
	JSONArray array =  jsonObject.getJSONArray("ids");
	ZMQ.close(sc);
	ZMQ.term(ctx);
	return array.getString(0);
    }
    
    /*
     * Query the Agents Transformation
     *
     *
     */
    public String queryAnimalsTransform(String id_, String ref_id_)
    {
	System.out.println("AnimalTrans");
		String id = id_;
	String ref_id = ref_id_;//queryAgentsREFID();
    	ctx = ZMQ.init(1);        
	          
  	sc = ZMQ.socket(ctx, ZMQ.ZMQ_REQ);
  	boolean rc = ZMQ.connect(sc, "tcp://127.0.0.1:22422");
	String data = "{ "+
      			"\"@worldmodeltype\": \"RSGQuery\","+
      			"\"query\": \"GET_TRANSFORM\","+
      			"\"id\": \""+id+"\","+
      			"\"idReferenceNode\": \""+ref_id+"\","+
      			"\"timeStamp\": {"+
      			"\"@stamptype\": \"TimeStampUTCms\","+
	    "\"stamp\": \"0.0\""+
      		"} "+
	    "}";

	int result = ZMQ.send(sc,data.getBytes(ZMQ.CHARSET),data.length(),0);
	Msg msg = ZMQ.recv(sc, 0);
	JSONObject jsonObject = JSONObject.fromObject(new String(msg.data()));
	System.out.println(jsonObject);
	JSONObject transform =  jsonObject.getJSONObject("transform");
 	System.out.println(transform);
	JSONArray array = transform.getJSONArray("matrix");
	JSONArray r0 =  array.getJSONArray(0);
	JSONArray r1 =  array.getJSONArray(1);
	JSONArray r2 =  array.getJSONArray(2);
	JSONArray r3 =  array.getJSONArray(3);
        String pose_arr = "[["+r0.getDouble(3)+","+r1.getDouble(3)+","+r2.getDouble(3)+","+r3.getDouble(3)+"]"+
	    "["+r3.getDouble(0)+","+r2.getDouble(0)+","+r1.getDouble(0)+","+r0.getDouble(0)+"]]";

	//FIXME remove shutown
	ZMQ.close(sc);
	ZMQ.term(ctx);
	//
	System.out.println("haha");
	System.out.println(pose_arr);
	return pose_arr;
    }

	/////////////// ANIMALS ARE DONE//////////////////////////////



    ///////////////////////////////////////////////////////////////////////
    ///////////// SHERPA OBJECTS//////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////


    public String queryObjectsREFID(){
	ctx = ZMQ.init(1);                         
  	sc = ZMQ.socket(ctx, ZMQ.ZMQ_REQ);
  	boolean rc = ZMQ.connect(sc, "tcp://127.0.0.1:22422");
	String data ="{"+
	    "\"@worldmodeltype\": \"RSGQuery\"," +"\"query\": \"GET_NODES\","+"\"attributes\":["+
	    "{\"key\": \"name\", \"value\": \"objects\"}," +"]"+ "}";
	int result = ZMQ.send(sc,data.getBytes(ZMQ.CHARSET),data.length(),0);
	Msg msg = ZMQ.recv(sc, 0);
	JSONObject jsonObject = JSONObject.fromObject(new String(msg.data()));
	System.out.println(jsonObject);
	
	JSONArray array =  jsonObject.getJSONArray("ids");
	ZMQ.close(sc);
	ZMQ.term(ctx);
	return array.getString(0);
    }



    public String queryEnvironmentREFID(){
	ctx = ZMQ.init(1);                         
  	sc = ZMQ.socket(ctx, ZMQ.ZMQ_REQ);
  	boolean rc = ZMQ.connect(sc, "tcp://127.0.0.1:22422");
	String data ="{"+
	    "\"@worldmodeltype\": \"RSGQuery\"," +"\"query\": \"GET_NODES\","+"\"attributes\":["+
	    "{\"key\": \"name\", \"value\": \"environment\"}," +"]"+ "}";
	int result = ZMQ.send(sc,data.getBytes(ZMQ.CHARSET),data.length(),0);
	Msg msg = ZMQ.recv(sc, 0);
	JSONObject jsonObject = JSONObject.fromObject(new String(msg.data()));
	System.out.println(jsonObject);
	
	JSONArray array =  jsonObject.getJSONArray("ids");
	ZMQ.close(sc);
	ZMQ.term(ctx);
	return array.getString(0);
       }


    public String queryEntityID(String obj_name){
	ctx = ZMQ.init(1);                         
  	sc = ZMQ.socket(ctx, ZMQ.ZMQ_REQ);
  	boolean rc = ZMQ.connect(sc, "tcp://127.0.0.1:22422");
	String data ="{"+
	    "\"@worldmodeltype\": \"RSGQuery\"," +"\"query\": \"GET_NODES\","+"\"attributes\":["+
	    "{\"key\": \"name\", \"value\": \""+obj_name+"\"}," +"]"+ "}";
	int result = ZMQ.send(sc,data.getBytes(ZMQ.CHARSET),data.length(),0);
	Msg msg = ZMQ.recv(sc, 0);
	JSONObject jsonObject = JSONObject.fromObject(new String(msg.data()));
	System.out.println(jsonObject);
	
	JSONArray array =  jsonObject.getJSONArray("ids");
	ZMQ.close(sc);
	ZMQ.term(ctx);
	return array.getString(0);
       }

    public String queryObjectsCenterID(String name)
    {
	System.out.println("queryTransform function");
    	ctx = ZMQ.init(1);               
	          
  	sc = ZMQ.socket(ctx, ZMQ.ZMQ_REQ);
  	boolean rc = ZMQ.connect(sc, "tcp://127.0.0.1:22422");
  	System.out.println("TEST3");
	String data ="{"+
	    "\"@worldmodeltype\": \"RSGQuery\"," +"\"query\": \"GET_NODES\","+"\"attributes\":["+
	    "{\"key\": \"name\", \"value\": \""+name+"\"}," +"]"+ "}";
	int result = ZMQ.send(sc,data.getBytes(ZMQ.CHARSET),data.length(),0);
	Msg msg = ZMQ.recv(sc, 0);
	
	System.out.println("received reply");
	JSONObject jsonObject = JSONObject.fromObject(new String(msg.data()));
	System.out.println(jsonObject);
	
	JSONArray array =  jsonObject.getJSONArray("ids");
	ZMQ.close(sc);
	ZMQ.term(ctx);
	return array.getString(0);
    }

    public String queryBBMinObjectsID(String mou_name)
    {
	System.out.println("queryTransform function");
    	ctx = ZMQ.init(1);               
	          
  	sc = ZMQ.socket(ctx, ZMQ.ZMQ_REQ);
  	boolean rc = ZMQ.connect(sc, "tcp://127.0.0.1:22422");
  	System.out.println("TEST3");
	String data ="{"+
	    "\"@worldmodeltype\": \"RSGQuery\"," +"\"query\": \"GET_NODES\","+"\"attributes\":["+
	    "{\"key\": \"name\", \"value\": \""+mou_name+"\"}," +"]"+ "}";
	int result = ZMQ.send(sc,data.getBytes(ZMQ.CHARSET),data.length(),0);
	Msg msg = ZMQ.recv(sc, 0);
	
	System.out.println("received reply");
	JSONObject jsonObject = JSONObject.fromObject(new String(msg.data()));
	System.out.println(jsonObject);
	
	JSONArray array =  jsonObject.getJSONArray("ids");
	ZMQ.close(sc);
	ZMQ.term(ctx);
	return array.getString(0);
    }

   public String queryBBMaxObjectsID(String mou_name)
    {
	System.out.println("queryTransform function");
    	ctx = ZMQ.init(1);               
	          
  	sc = ZMQ.socket(ctx, ZMQ.ZMQ_REQ);
  	boolean rc = ZMQ.connect(sc, "tcp://127.0.0.1:22422");
  	System.out.println("TEST3");
	String data ="{"+
	    "\"@worldmodeltype\": \"RSGQuery\"," +"\"query\": \"GET_NODES\","+"\"attributes\":["+
	    "{\"key\": \"name\", \"value\": \""+mou_name+"\"}," +"]"+ "}";
	int result = ZMQ.send(sc,data.getBytes(ZMQ.CHARSET),data.length(),0);
	Msg msg = ZMQ.recv(sc, 0);
	
	System.out.println("received reply");
	JSONObject jsonObject = JSONObject.fromObject(new String(msg.data()));
	System.out.println(jsonObject);
	
	JSONArray array =  jsonObject.getJSONArray("ids");
	ZMQ.close(sc);
	ZMQ.term(ctx);
	return array.getString(0);
    }

   
    public String[] queryEntityTransform(String id_, String ref_id_){
	System.out.println("AnimalTrans");
		String id = id_;
	String ref_id = ref_id_;//queryAgentsREFID();
    	ctx = ZMQ.init(1);        
	          
  	sc = ZMQ.socket(ctx, ZMQ.ZMQ_REQ);
  	boolean rc = ZMQ.connect(sc, "tcp://127.0.0.1:22422");
	String data = "{ "+
      			"\"@worldmodeltype\": \"RSGQuery\","+
      			"\"query\": \"GET_TRANSFORM\","+
      			"\"id\": \""+id+"\","+
      			"\"idReferenceNode\": \""+ref_id+"\","+
      			"\"timeStamp\": {"+
      			"\"@stamptype\": \"TimeStampUTCms\","+
	    "\"stamp\": \"0.0\""+
      		"} "+
	    "}";

	int result = ZMQ.send(sc,data.getBytes(ZMQ.CHARSET),data.length(),0);
	Msg msg = ZMQ.recv(sc, 0);
	JSONObject jsonObject = JSONObject.fromObject(new String(msg.data()));
	System.out.println(jsonObject);
	JSONObject transform =  jsonObject.getJSONObject("transform");
 	System.out.println(transform);
	JSONArray array = transform.getJSONArray("matrix");
	JSONArray r0 =  array.getJSONArray(0);
	JSONArray r1 =  array.getJSONArray(1);
	JSONArray r2 =  array.getJSONArray(2);
	JSONArray r3 =  array.getJSONArray(3);
        String pose_arr = "[["+r0.getDouble(3)+","+r1.getDouble(3)+","+r2.getDouble(3)+","+r3.getDouble(3)+"]"+
	    "["+r3.getDouble(0)+","+r2.getDouble(0)+","+r1.getDouble(0)+","+r0.getDouble(0)+"]]";

	//FIXME remove shutown
	ZMQ.close(sc);
	ZMQ.term(ctx);
	//
	System.out.println("haha");
	System.out.println(pose_arr);
	return pose_arr;
 }

    public String allInAll()
    {
	String moun_name = "mount01";
	String riv_name = "river01";
	String woo_name = "wood01";
	String hou_name = "house01";

	String riv_center = "river_center";
	String woo_center = "wood_center";
	String mou_center = "mount01_center";	
	String hou_center = "house01_center";

	String riv_bbmin = "river_bbox01";
	String riv_bbmax = "river_bbox02";
	String woo_bbmin = "wood_bbox01";
	String woo_bbmax = "wood_bbox02";
	String hou_bbmin = "house01_bbox01";
	String hou_bbmax = "house01_bbox02";
	String mount_bbmin = "mount01_bbox01";
	String mount_bbmax = "mount02_bbox02";
		
    }


    
    public SWMConnection() {
	//	ctx = ZMQ.init(1);
	System.out.println("moiiiweweewensen\n");
	
	//    	sc = ZMQ.socket(ctx, ZMQ.ZMQ_REQ);
	// 	boolean rc = ZMQ.connect(sc, "tcp://127.0.0.1:22422");
	System.out.println("moiiinsen\n");
	//	testString("hello");
	//queryTransform("92876bfd-3b6d-44a3-a9a1-a7b36c53acd1" ,"e379121f-06c6-4e21-ae9d-ae78ec1986a1" , null);
    }
}
